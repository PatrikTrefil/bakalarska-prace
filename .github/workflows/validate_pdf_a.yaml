name: Validate PDF/A

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

  workflow_dispatch:

jobs:
  build:
    name: Build thesis PDFs and upload to artifacts and Netlify
    runs-on: ubuntu-latest
    container: { image: "aergus/latex" }
    defaults:
      run:
        working-directory: src

    env:
      # Secrets are configured on github.com in repository settings
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

    steps:
      - uses: actions/checkout@v3

      - name: Install dependencies
        working-directory: lib
        run: apt-get update && apt-get install -y inkscape graphviz libsecret-1-0 libnotify4 && dpkg -i ./drawio-amd64-24.0.4.deb

      - name: Build the thesis
        run: make

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Thesis
          path: src/*.pdf

      - uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install Vercel CLI
        run: npm install --global vercel

      - name: Prepare folder to upload
        run: >-
          mkdir upload &&
          cp prace.pdf abstrakt.pdf upload &&
          echo '{ "redirects": [ { "source": "/", "destination": "/prace.pdf", "permanent": false } ] }' > upload/vercel.json

      - name: Pull Vercel Environment Information
        working-directory: src/upload
        run: vercel pull --yes --environment=production --token=${{
          secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        working-directory: src/upload
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Project Artifacts to Vercel
        working-directory: src/upload
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}

  verify:
    name: Verify PDF/A
    runs-on: ubuntu-latest
    needs: build
    container: { image: "ghcr.io/mff-cuni-cz/cuni-thesis-validator" }

    steps:
      - name: Get PDFs
        uses: actions/download-artifact@v3
      - name: Run VeraPDF
        run: verify Thesis/*.pdf | tee /dev/stderr | grep -qE 'nonCompliant="0"'
